name: Deploy to GitHub Pages
on:
  push:
    branches: [ main ]
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm install --save-dev --legacy-peer-deps @typescript-eslint/parser@^5.4.2 @typescript-eslint/eslint-plugin@^5.4.2
      - name: Create env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
      - name: Build
        run: |
          mkdir -p out/_next/static
          npm run build -- --no-lint
          cp -r .next/static out/_next/static
          cp -r public out/
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./out
          retention-days: 1
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./out
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
